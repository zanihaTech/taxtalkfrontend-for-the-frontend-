{"version":3,"sources":["Login.js"],"names":["login","username","password","response","data","regeneratorRuntime","async","_context","prev","next","awrap","method","headers","Content-Type","body","JSON","stringify","sent","json","ok","setItem","token","console","log","abrupt","alert","concat","message","t0","stop"],"mappings":"aAAA,IAAMA,MAAQ,SAAOC,EAAUC,GAAjB,IAAAC,EAAAC,EAAA,OAAAC,mBAAAC,MAAA,SAAAC,GAAA,OAAA,OAAAA,EAAAC,KAAAD,EAAAE,MAAA,KAAA,EAAA,OAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAAAJ,mBAAAK,MAAOT,MAAP,uCAAA,CAAAU,OAAA,OAAAC,QAAA,CAAAC,eAAA,oBAAAC,KAAAC,KAAAC,UAAA,CAAAf,SAAAA,EAAAC,SAAAA,OAAA,KAAA,EAAA,OAAAC,EAAAI,EAAAU,KAAAV,EAAAE,KAAA,EAAAJ,mBAAAK,MAAAP,EAAAe,QAAA,KAAA,EAAA,GAAAd,EAAAG,EAAAU,KAAAd,EAAAgB,GAAA,OAINP,aAASQ,QAAA,QAAAhB,EAAAiB,OAAEC,QAAAC,IAAA,oBAAgBnB,EAAAiB,OAJrBd,EAAAiB,OAAA,SAE6DpB,EAAAiB,OAF7Dd,EAAAE,KAAA,GAAA,MAAA,KAAA,GAAA,OAK2BP,QAAAA,MAAQ,gBAARA,EAAAA,SAAZuB,MAAf,iBAAAC,OAAwCtB,EAAAuB,UALxCpB,EAAAiB,OAAA,SAmBC,MAnBD,KAAA,GAAAjB,EAAAE,KAAA,GAAA,MAAA,KAAA,GAAAF,EAAAC,KAAA,GAAAD,EAAAqB,GAAArB,EAAA,MAAA,GAEFJ,QAAAA,MAFE,qBAEFA,EAAAA,IAFEsB,MAAA,qDAAA,KAAA,GAAA,IAAA,MAAA,OAAAlB,EAAAsB,SAAA,KAAA,KAAA,CAAA,CAAA,EAAA","file":"Login.min.js","sourcesContent":["const login = async (username, password) => {\n    try {\n      const response = await fetch(\"http://localhost:5000/api/auth/login\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ username, password }), // Send username and password as JSON\n      });\n  \n      const data = await response.json(); // Parse the JSON response\n  \n      if (response.ok) {\n        // If login is successful\n        localStorage.setItem(\"token\", data.token); // Store the token in local storage\n        console.log(\"Login successful:\", data.token);\n        return data.token; // Return token or any additional data if needed\n      } else {\n        // If login fails, handle the error\n        console.error(\"Login failed:\", data.message);\n        alert(`Login failed: ${data.message}`); // Optional: Show an alert for better UX\n        return null; // Return null or any error indication\n      }\n    } catch (error) {\n      // Catch any unexpected errors (e.g., network issues)\n      console.error(\"An error occurred:\", error);\n      alert(\"An error occurred during login. Please try again.\"); // Optional: Show alert\n    }\n  };\n  "]}